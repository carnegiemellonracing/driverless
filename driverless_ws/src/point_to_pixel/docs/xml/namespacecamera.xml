<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespacecamera" kind="namespace" language="C++">
    <compoundname>camera</compoundname>
    <innerclass refid="structcamera_1_1Camera" prot="public">camera::Camera</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacecamera_1a7ac86afd6f3bbc04732642fecf026db0" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint16_t</type>
        <definition>constexpr uint16_t camera::ZED_VENDOR_ID</definition>
        <argsstring></argsstring>
        <name>ZED_VENDOR_ID</name>
        <initializer>= 0x2b03</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/camera/camera.hpp" line="17" column="31" bodyfile="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/camera/camera.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacecamera_1af86989e0fc45db1bb92bf6b674e6c303" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint16_t</type>
        <definition>constexpr uint16_t camera::ZED_PRODUCT_ID</definition>
        <argsstring></argsstring>
        <name>ZED_PRODUCT_ID</name>
        <initializer>= 0xf582</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/camera/camera.hpp" line="18" column="31" bodyfile="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/camera/camera.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacecamera_1aa8b2fbb964031162160583c488aa955c" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint16_t</type>
        <definition>constexpr uint16_t camera::ZED2_PRODUCT_ID</definition>
        <argsstring></argsstring>
        <name>ZED2_PRODUCT_ID</name>
        <initializer>= 0xf780</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/camera/camera.hpp" line="19" column="31" bodyfile="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/camera/camera.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacecamera_1a4dbdf6cc4a7110c2fc46de0ff154c48c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; uint64_t, cv::Mat &gt;</type>
        <definition>std::pair&lt; uint64_t, cv::Mat &gt; camera::find_closest_frame</definition>
        <argsstring>(const std::deque&lt; std::pair&lt; uint64_t, cv::Mat &gt;&gt; &amp;img_deque, const rclcpp::Time &amp;callbackTime, const rclcpp::Logger &amp;logger)</argsstring>
        <name>find_closest_frame</name>
        <param>
          <type>const std::deque&lt; std::pair&lt; uint64_t, cv::Mat &gt;&gt; &amp;</type>
          <declname>img_deque</declname>
        </param>
        <param>
          <type>const rclcpp::Time &amp;</type>
          <declname>callbackTime</declname>
        </param>
        <param>
          <type>const rclcpp::Logger &amp;</type>
          <declname>logger</declname>
        </param>
        <briefdescription>
<para>Finds the closest frame to a callback time from the image deque. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>img_deque</parametername>
</parameternamelist>
<parameterdescription>
<para>Image deque with timestamps </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callbackTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The time to find a matching frame for </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>logger</parametername>
</parameternamelist>
<parameterdescription>
<para>ROS logger for error reporting </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::pair&lt;uint64_t, cv::Mat&gt; The closest frame with timestamp </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/camera/camera.cpp" line="5" column="15" bodyfile="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/camera/camera.cpp" bodystart="5" bodyend="25" declfile="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/camera/camera.hpp" declline="54" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="namespacecamera_1ab94649a470f5eed4c302156fd703abac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool camera::initialize_camera</definition>
        <argsstring>(Camera &amp;cam, const rclcpp::Logger &amp;logger)</argsstring>
        <name>initialize_camera</name>
        <param>
          <type><ref refid="structcamera_1_1Camera" kindref="compound">Camera</ref> &amp;</type>
          <declname>cam</declname>
        </param>
        <param>
          <type>const rclcpp::Logger &amp;</type>
          <declname>logger</declname>
        </param>
        <briefdescription>
<para>Dynamically assigns camera ids and corrects initial id assigmment. Also initializes ZED camera with intrinsic rectification matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cam</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structcamera_1_1Camera" kindref="compound">Camera</ref> struct to initialize </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>logger</parametername>
</parameternamelist>
<parameterdescription>
<para>ROS logger for status messages </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool Success status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/camera/camera.cpp" line="27" column="10" bodyfile="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/camera/camera.cpp" bodystart="27" bodyend="174" declfile="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/camera/camera.hpp" declline="68" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacecamera_1a5bf6cb782fa49778e8baa15eac31c6d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; uint64_t, cv::Mat &gt;</type>
        <definition>std::pair&lt; uint64_t, cv::Mat &gt; camera::capture_and_rectify_frame</definition>
        <argsstring>(const rclcpp::Logger &amp;logger, const Camera &amp;cam, bool left_camera, bool use_inner_lens)</argsstring>
        <name>capture_and_rectify_frame</name>
        <param>
          <type>const rclcpp::Logger &amp;</type>
          <declname>logger</declname>
        </param>
        <param>
          <type>const <ref refid="structcamera_1_1Camera" kindref="compound">Camera</ref> &amp;</type>
          <declname>cam</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>left_camera</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>use_inner_lens</declname>
        </param>
        <briefdescription>
<para>Captures and rectifies a frame from a ZED camera. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>logger</parametername>
</parameternamelist>
<parameterdescription>
<para>ROS logger for status messages </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cam</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structcamera_1_1Camera" kindref="compound">Camera</ref> struct containing capture and rectification maps </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>left_camera</parametername>
</parameternamelist>
<parameterdescription>
<para>If using left sided zed set to true </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>use_inner_lens</parametername>
</parameternamelist>
<parameterdescription>
<para>If using inner lenses set to true </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::pair&lt;uint64_t, cv::Mat&gt; The timestamp and rectified frame </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/camera/camera.cpp" line="176" column="15" bodyfile="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/camera/camera.cpp" bodystart="176" bodyend="248" declfile="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/camera/camera.hpp" declline="82" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="namespacecamera_1a983d35005900d6c8bec39e63c2ce5698" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void camera::capture_freezes</definition>
        <argsstring>(const rclcpp::Logger &amp;logger, const Camera &amp;left_cam, const Camera &amp;right_cam, std::mutex &amp;l_img_mutex, std::mutex &amp;r_img_mutex, std::deque&lt; std::pair&lt; uint64_t, cv::Mat &gt;&gt; &amp;img_deque_l, std::deque&lt; std::pair&lt; uint64_t, cv::Mat &gt;&gt; &amp;img_deque_r, bool use_inner_lens)</argsstring>
        <name>capture_freezes</name>
        <param>
          <type>const rclcpp::Logger &amp;</type>
          <declname>logger</declname>
        </param>
        <param>
          <type>const <ref refid="structcamera_1_1Camera" kindref="compound">Camera</ref> &amp;</type>
          <declname>left_cam</declname>
        </param>
        <param>
          <type>const <ref refid="structcamera_1_1Camera" kindref="compound">Camera</ref> &amp;</type>
          <declname>right_cam</declname>
        </param>
        <param>
          <type>std::mutex &amp;</type>
          <declname>l_img_mutex</declname>
        </param>
        <param>
          <type>std::mutex &amp;</type>
          <declname>r_img_mutex</declname>
        </param>
        <param>
          <type>std::deque&lt; std::pair&lt; uint64_t, cv::Mat &gt;&gt; &amp;</type>
          <declname>img_deque_l</declname>
        </param>
        <param>
          <type>std::deque&lt; std::pair&lt; uint64_t, cv::Mat &gt;&gt; &amp;</type>
          <declname>img_deque_r</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>use_inner_lens</declname>
        </param>
        <briefdescription>
<para>Capture and saves freeze frames for calibration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>logger</parametername>
</parameternamelist>
<parameterdescription>
<para>ROS logger for status messages </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>left_cam</parametername>
</parameternamelist>
<parameterdescription>
<para>Left camera struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right_cam</parametername>
</parameternamelist>
<parameterdescription>
<para>Right camera struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>l_img_mutex</parametername>
</parameternamelist>
<parameterdescription>
<para>Mutex for left image deque </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r_img_mutex</parametername>
</parameternamelist>
<parameterdescription>
<para>Mutex for right image deque </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>img_deque_l</parametername>
</parameternamelist>
<parameterdescription>
<para>Deque for left image frames </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>img_deque_r</parametername>
</parameternamelist>
<parameterdescription>
<para>Deque for right image frames </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>use_inner_lens</parametername>
</parameternamelist>
<parameterdescription>
<para>If using inner lenses set to true </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/camera/camera.cpp" line="250" column="10" bodyfile="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/camera/camera.cpp" bodystart="250" bodyend="328" declfile="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/camera/camera.hpp" declline="101" declcolumn="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/camera/camera.cpp" line="4" column="1"/>
  </compounddef>
</doxygen>
