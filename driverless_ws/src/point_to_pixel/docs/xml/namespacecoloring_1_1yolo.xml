<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespacecoloring_1_1yolo" kind="namespace" language="C++">
    <compoundname>coloring::yolo</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacecoloring_1_1yolo_1ab04c5029a9445ef409e23b4550bc8988" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; int, double &gt;</type>
        <definition>std::pair&lt;int, double&gt; coloring::yolo::get_color</definition>
        <argsstring>(Eigen::Vector3d &amp;pixel, float *detection, int cols, int rows, double confidence_threshold)</argsstring>
        <name>get_color</name>
        <param>
          <type>Eigen::Vector3d &amp;</type>
          <declname>pixel</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>detection</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>double</type>
          <declname>confidence_threshold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/coloring/coloring.hpp" line="26" column="19" declfile="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/coloring/coloring.hpp" declline="26" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacecoloring_1_1yolo_1a78c62d6c1f3f9ad73d9a90ede9232f6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; int, double &gt;</type>
        <definition>std::pair&lt; int, double &gt; coloring::yolo::get_color</definition>
        <argsstring>(Eigen::Vector3d &amp;pixel, std::vector&lt; cv::Mat &gt; detection, int cols, int rows, double confidence_threshold)</argsstring>
        <name>get_color</name>
        <param>
          <type>Eigen::Vector3d &amp;</type>
          <declname>pixel</declname>
        </param>
        <param>
          <type>std::vector&lt; cv::Mat &gt;</type>
          <declname>detection</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>double</type>
          <declname>confidence_threshold</declname>
        </param>
        <briefdescription>
<para>Uses YOLO to determine cone color. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pixel</parametername>
</parameternamelist>
<parameterdescription>
<para>The pixel location to check </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>detection</parametername>
</parameternamelist>
<parameterdescription>
<para>YOLO detection output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>Image columns </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rows</parametername>
</parameternamelist>
<parameterdescription>
<para>Image rows </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>confidence_threshold</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum confidence to report a detection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::pair&lt;int, double&gt; Color ID and confidence </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/coloring/yolo.cpp" line="6" column="19" bodyfile="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/coloring/yolo.cpp" bodystart="6" bodyend="67" declfile="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/coloring/yolo.hpp" declline="19" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacecoloring_1_1yolo_1a0703686c1f9a725622d4f7b1c2988e17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void coloring::yolo::draw_bounding_boxes</definition>
        <argsstring>(cv::Mat &amp;frame, cv::Mat &amp;canvas, std::vector&lt; cv::Mat &gt; detections, int rows, int cols, double confidence_threshold)</argsstring>
        <name>draw_bounding_boxes</name>
        <param>
          <type>cv::Mat &amp;</type>
          <declname>frame</declname>
        </param>
        <param>
          <type>cv::Mat &amp;</type>
          <declname>canvas</declname>
        </param>
        <param>
          <type>std::vector&lt; cv::Mat &gt;</type>
          <declname>detections</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>double</type>
          <declname>confidence_threshold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/coloring/yolo.cpp" line="71" column="14" bodyfile="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/coloring/yolo.cpp" bodystart="71" bodyend="130" declfile="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/coloring/yolo.hpp" declline="27" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="namespacecoloring_1_1yolo_1a3e6b0a38af071c34bb0ddd68c150a4a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cv::dnn::Net</type>
        <definition>cv::dnn::Net coloring::yolo::init_model</definition>
        <argsstring>(const std::string &amp;model_path)</argsstring>
        <name>init_model</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>model_path</declname>
        </param>
        <briefdescription>
<para>Initialize the YOLO model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>model_path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to the ONNX model file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>cv::dnn::Net Initialized neural network </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/coloring/yolo.cpp" line="132" column="22" bodyfile="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/coloring/yolo.cpp" bodystart="132" bodyend="144" declfile="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/coloring/yolo.hpp" declline="42" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="namespacecoloring_1_1yolo_1ab0eb4b720e1c0b772d815ae7c752d702" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; cv::Mat &gt;</type>
        <definition>std::vector&lt; cv::Mat &gt; coloring::yolo::process_frame</definition>
        <argsstring>(const cv::Mat &amp;frame, cv::dnn::Net &amp;net, int yolo_width=640, int yolo_height=640)</argsstring>
        <name>process_frame</name>
        <param>
          <type>const cv::Mat &amp;</type>
          <declname>frame</declname>
        </param>
        <param>
          <type>cv::dnn::Net &amp;</type>
          <declname>net</declname>
        </param>
        <param>
          <type>int</type>
          <declname>yolo_width</declname>
          <defval>640</defval>
        </param>
        <param>
          <type>int</type>
          <declname>yolo_height</declname>
          <defval>640</defval>
        </param>
        <briefdescription>
<para>Process frame with YOLO. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frame</parametername>
</parameternamelist>
<parameterdescription>
<para>Input frame </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>net</parametername>
</parameternamelist>
<parameterdescription>
<para>Neural network </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yolo_width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width for YOLO input </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yolo_height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height for YOLO input </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float *detection results </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/coloring/yolo.cpp" line="146" column="21" bodyfile="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/coloring/yolo.cpp" bodystart="146" bodyend="175" declfile="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/coloring/yolo.hpp" declline="53" declcolumn="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/coloring/coloring.hpp" line="25" column="5"/>
  </compounddef>
</doxygen>
