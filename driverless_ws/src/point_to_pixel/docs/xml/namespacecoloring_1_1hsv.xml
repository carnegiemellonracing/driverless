<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespacecoloring_1_1hsv" kind="namespace" language="C++">
    <compoundname>coloring::hsv</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacecoloring_1_1hsv_1a81a6b3f18b42b0331d6d0b44c3c7b9f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; int, double &gt;</type>
        <definition>std::pair&lt; int, double &gt; coloring::hsv::get_color</definition>
        <argsstring>(Eigen::Vector3d &amp;pixel, cv::Mat image, const cv::Scalar &amp;yellow_filter_low, const cv::Scalar &amp;yellow_filter_high, const cv::Scalar &amp;blue_filter_low, const cv::Scalar &amp;blue_filter_high, const cv::Scalar &amp;orange_filter_low, const cv::Scalar &amp;orange_filter_high, double confidence_threshold)</argsstring>
        <name>get_color</name>
        <param>
          <type>Eigen::Vector3d &amp;</type>
          <declname>pixel</declname>
        </param>
        <param>
          <type>cv::Mat</type>
          <declname>image</declname>
        </param>
        <param>
          <type>const cv::Scalar &amp;</type>
          <declname>yellow_filter_low</declname>
        </param>
        <param>
          <type>const cv::Scalar &amp;</type>
          <declname>yellow_filter_high</declname>
        </param>
        <param>
          <type>const cv::Scalar &amp;</type>
          <declname>blue_filter_low</declname>
        </param>
        <param>
          <type>const cv::Scalar &amp;</type>
          <declname>blue_filter_high</declname>
        </param>
        <param>
          <type>const cv::Scalar &amp;</type>
          <declname>orange_filter_low</declname>
        </param>
        <param>
          <type>const cv::Scalar &amp;</type>
          <declname>orange_filter_high</declname>
        </param>
        <param>
          <type>double</type>
          <declname>confidence_threshold</declname>
        </param>
        <briefdescription>
<para>Uses HSV color filtering to determine cone color. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pixel</parametername>
</parameternamelist>
<parameterdescription>
<para>The pixel location to check </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para>The image to analyze </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yellow_filter_low</parametername>
</parameternamelist>
<parameterdescription>
<para>Lower HSV bound for yellow detection </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yellow_filter_high</parametername>
</parameternamelist>
<parameterdescription>
<para>Upper HSV bound for yellow detection </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blue_filter_low</parametername>
</parameternamelist>
<parameterdescription>
<para>Lower HSV bound for blue detection </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blue_filter_high</parametername>
</parameternamelist>
<parameterdescription>
<para>Upper HSV bound for blue detection </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>orange_filter_low</parametername>
</parameternamelist>
<parameterdescription>
<para>Lower HSV bound for orange detection </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>orange_filter_high</parametername>
</parameternamelist>
<parameterdescription>
<para>Upper HSV bound for orange detection </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>confidence_threshold</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum confidence to report a color </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::pair&lt;int, double&gt; Color ID (-1, 0=orange, 1=yellow, 2=blue) and confidence </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/coloring/hsv.cpp" line="5" column="19" bodyfile="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/coloring/hsv.cpp" bodystart="5" bodyend="86" declfile="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/coloring/hsv.hpp" declline="22" declcolumn="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/aryalohia/CMR/24a/driverless/driverless_ws/src/point_to_pixel/src/coloring/coloring.hpp" line="11" column="5"/>
  </compounddef>
</doxygen>
