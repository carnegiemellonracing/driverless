<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="generic__slam__node_8cpp" kind="file" language="C++">
    <compoundname>generic_slam_node.cpp</compoundname>
    <includes refid="isam2__nodes_8hpp" local="yes">isam2_nodes.hpp</includes>
    <includedby refid="generic__slam__node__impl_8cpp" local="yes">src/nodes/generic_slam_node_impl.cpp</includedby>
    <incdepgraph>
      <node id="33">
        <label>constants.hpp</label>
        <link refid="constants_8hpp"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>data_association.hpp</label>
        <link refid="data__association_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>isam2.hpp</label>
        <link refid="isam2_8hpp"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>isam2_nodes.hpp</label>
        <link refid="isam2__nodes_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>loop_closure.hpp</label>
        <link refid="loop__closure_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ros_utils.hpp</label>
        <link refid="ros__utils_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>slam_est_and_mcov.hpp</label>
        <link refid="slam__est__and__mcov_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>unary_factor.hpp</label>
        <link refid="unary__factor_8hpp"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/nodes/generic_slam_node.cpp</label>
        <link refid="generic__slam__node_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>algorithm</label>
      </node>
      <node id="36">
        <label>bits/stdc++.h</label>
      </node>
      <node id="23">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="28">
        <label>chrono</label>
      </node>
      <node id="29">
        <label>climits</label>
      </node>
      <node id="27">
        <label>cmath</label>
      </node>
      <node id="26">
        <label>deque</label>
      </node>
      <node id="37">
        <label>eigen3/Eigen/Dense</label>
      </node>
      <node id="52">
        <label>float.h</label>
      </node>
      <node id="30">
        <label>fmt/format.h</label>
      </node>
      <node id="25">
        <label>fstream</label>
      </node>
      <node id="20">
        <label>geometry_msgs/msg/point.hpp</label>
      </node>
      <node id="14">
        <label>geometry_msgs/msg/pose_stamped.hpp</label>
      </node>
      <node id="16">
        <label>geometry_msgs/msg/quaternion_stamped.hpp</label>
      </node>
      <node id="19">
        <label>geometry_msgs/msg/twist.hpp</label>
      </node>
      <node id="17">
        <label>geometry_msgs/msg/twist_stamped.hpp</label>
      </node>
      <node id="18">
        <label>geometry_msgs/msg/twist_with_covariance.hpp</label>
      </node>
      <node id="15">
        <label>geometry_msgs/msg/vector3_stamped.hpp</label>
      </node>
      <node id="31">
        <label>gtsam/geometry/Point2.h</label>
      </node>
      <node id="32">
        <label>gtsam/geometry/Pose2.h</label>
      </node>
      <node id="38">
        <label>gtsam/inference/Symbol.h</label>
      </node>
      <node id="43">
        <label>gtsam/nonlinear/DoglegOptimizer.h</label>
      </node>
      <node id="44">
        <label>gtsam/nonlinear/GaussNewtonOptimizer.h</label>
      </node>
      <node id="39">
        <label>gtsam/nonlinear/ISAM2.h</label>
      </node>
      <node id="42">
        <label>gtsam/nonlinear/LevenbergMarquardtOptimizer.h</label>
      </node>
      <node id="45">
        <label>gtsam/nonlinear/NonlinearConjugateGradientOptimizer.h</label>
      </node>
      <node id="55">
        <label>gtsam/nonlinear/NonlinearFactor.h</label>
      </node>
      <node id="40">
        <label>gtsam/nonlinear/NonlinearFactorGraph.h</label>
      </node>
      <node id="41">
        <label>gtsam/nonlinear/Values.h</label>
      </node>
      <node id="48">
        <label>gtsam/sam/BearingRangeFactor.h</label>
      </node>
      <node id="47">
        <label>gtsam/slam/BetweenFactor.h</label>
      </node>
      <node id="46">
        <label>gtsam/slam/ProjectionFactor.h</label>
      </node>
      <node id="10">
        <label>interfaces/msg/cone_array.hpp</label>
      </node>
      <node id="11">
        <label>interfaces/msg/cone_array_with_odom.hpp</label>
      </node>
      <node id="13">
        <label>interfaces/msg/slam_chunk.hpp</label>
      </node>
      <node id="12">
        <label>interfaces/msg/slam_pose.hpp</label>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
      <node id="7">
        <label>message_filters/subscriber.h</label>
      </node>
      <node id="9">
        <label>message_filters/sync_policies/approximate_time.h</label>
      </node>
      <node id="8">
        <label>message_filters/synchronizer.h</label>
      </node>
      <node id="5">
        <label>optional</label>
      </node>
      <node id="6">
        <label>rclcpp/rclcpp.hpp</label>
      </node>
      <node id="21">
        <label>sensor_msgs/msg/nav_sat_fix.hpp</label>
      </node>
      <node id="22">
        <label>std_msgs/msg/string.hpp</label>
      </node>
      <node id="34">
        <label>string</label>
      </node>
      <node id="50">
        <label>tuple</label>
      </node>
      <node id="24">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>src/nodes/generic_slam_node.cpp</label>
        <link refid="generic__slam__node_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/nodes/generic_slam_node_impl.cpp</label>
        <link refid="generic__slam__node__impl_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacenodes">nodes</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="isam2__nodes_8hpp" kindref="compound">isam2_nodes.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenodes" kindref="compound">nodes</ref><sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>cone_msg_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>velocity_msg_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>orientation_msg_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>position_msg_t&gt;<sp/></highlight></codeline>
<codeline lineno="6" refid="classnodes_1_1GenericSLAMNode_1a58d83801be4bff20d25cf082f82b044b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnodes_1_1GenericSLAMNode_1a58d83801be4bff20d25cf082f82b044b" kindref="member">GenericSLAMNode&lt;cone_msg_t, velocity_msg_t, orientation_msg_t, position_msg_t&gt;::GenericSLAMNode</ref>()<sp/>:<sp/>Node(</highlight><highlight class="stringliteral">&quot;slam_node&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>slam_publisher_<sp/>=<sp/>this-&gt;create_publisher&lt;interfaces::msg::SLAMData&gt;(SLAM_TOPIC,<sp/>10);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnodes_1_1GenericSLAMNode_1a163b73f677228ba27e11fc392e47b324" kindref="member">slam_pose_publisher</ref><sp/>=<sp/>this-&gt;create_publisher&lt;interfaces::msg::SLAMPose&gt;(<ref refid="constants_8hpp_1aaa68cace55541b4c6fe52abee4fe55e1" kindref="member">SLAM_POSE_TOPIC</ref>,<sp/>10);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnodes_1_1GenericSLAMNode_1a102a8ba600108b8374f5afeb288d59bb" kindref="member">slam_chunk_publisher</ref><sp/>=<sp/>this-&gt;create_publisher&lt;interfaces::msg::SLAMChunk&gt;(<ref refid="constants_8hpp_1a1923a063156dc2b7360ed897b9f1264a" kindref="member">SLAM_CHUNK_TOPIC</ref>,<sp/>10);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnodes_1_1GenericSLAMNode_1a2f490a869053d4f426550f5ce5512933" kindref="member">declare_yaml_params</ref>();</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>sync<sp/>policy<sp/>and<sp/>subs<sp/>when<sp/>switching<sp/>betw<sp/>real<sp/>data<sp/>and<sp/>sim*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnodes_1_1GenericSLAMNode_1ac9913e82bb32e56d48e660f2b5b49240" kindref="member">dt</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;yaml_params::NoiseInputs&gt;<sp/>noise_inputs<sp/>=<sp/><ref refid="classnodes_1_1GenericSLAMNode_1add60599f53e6fcc111caae5fde661dff" kindref="member">get_noise_inputs</ref>();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnodes_1_1GenericSLAMNode_1a1c8e5e7be01a1f6a8c12035bb4045117" kindref="member">slam_instance</ref><sp/>=<sp/><ref refid="classslam_1_1slamISAM" kindref="compound">slam::slamISAM</ref>(this-&gt;get_logger(),<sp/>noise_inputs);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnodes_1_1GenericSLAMNode_1ab271b8cbc773ca67eead78dfd93a66cc" kindref="member">init_lon_lat</ref><sp/>=<sp/>std::nullopt;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnodes_1_1GenericSLAMNode_1a65cc2fec07dea2e13e5f813c7e40a6ed" kindref="member">init_x_y</ref><sp/>=<sp/>std::nullopt;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnodes_1_1GenericSLAMNode_1ac3e7b0efbfdf99de62dd12249a6b7b4c" kindref="member">file_opened</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnodes_1_1GenericSLAMNode_1a94064913429f785ae60b65126bd4c525" kindref="member">prev_filter_time</ref><sp/>=<sp/>std::nullopt;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnodes_1_1GenericSLAMNode_1a5b28b46b60a0cc8f629dc2f9bf2b0aed" kindref="member">prev_sync_callback_time</ref><sp/>=<sp/>std::nullopt;</highlight></codeline>
<codeline lineno="26" refid="classnodes_1_1GenericSLAMNode_1a58d83801be4bff20d25cf082f82b044b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_INFO(this-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;-----<sp/>Reminder<sp/>to<sp/>subscribe<sp/>to<sp/>the<sp/>right<sp/>topics<sp/>in<sp/>constants.hpp<sp/>-----&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>cone_msg_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>velocity_msg_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>orientation_msg_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>position_msg_t&gt;<sp/></highlight></codeline>
<codeline lineno="30" refid="classnodes_1_1GenericSLAMNode_1afbf813fbfc9c31773de427271ed6239e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnodes_1_1GenericSLAMNode_1afbf813fbfc9c31773de427271ed6239e" kindref="member">GenericSLAMNode&lt;cone_msg_t, velocity_msg_t, orientation_msg_t, position_msg_t&gt;::publish_slam_data</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceslam_1a74c5ff6a5f23be28ef1b570f909b8449" kindref="member">slam::slam_output_t</ref>&amp;<sp/>slam_data,<sp/>std_msgs::msg::Header<sp/>header)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interfaces::msg::SLAMPose<sp/>pose_msg<sp/>=<sp/>interfaces::msg::SLAMPose();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pose_msg.header<sp/>=<sp/>header;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pose_msg.current_chunk_id.data<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pose_msg.pose<sp/>=<sp/>std::get&lt;2&gt;(slam_data);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interfaces::msg::SLAMChunk<sp/>chunk_msg<sp/>=<sp/>interfaces::msg::SLAMChunk();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunk_msg.header<sp/>=<sp/>header;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunk_msg.blue_cones<sp/>=<sp/>std::get&lt;0&gt;(slam_data);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunk_msg.chunk_id.data<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunk_msg.yellow_cones<sp/>=<sp/>std::get&lt;1&gt;(slam_data);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnodes_1_1GenericSLAMNode_1a163b73f677228ba27e11fc392e47b324" kindref="member">slam_pose_publisher</ref>-&gt;publish(pose_msg);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnodes_1_1GenericSLAMNode_1a102a8ba600108b8374f5afeb288d59bb" kindref="member">slam_chunk_publisher</ref>-&gt;publish(chunk_msg);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>cone_msg_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>velocity_msg_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>orientation_msg_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>position_msg_t&gt;<sp/></highlight></codeline>
<codeline lineno="48" refid="classnodes_1_1GenericSLAMNode_1a2f490a869053d4f426550f5ce5512933" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnodes_1_1GenericSLAMNode_1a2f490a869053d4f426550f5ce5512933" kindref="member">GenericSLAMNode&lt;cone_msg_t, velocity_msg_t, orientation_msg_t, position_msg_t&gt;::declare_yaml_params</ref>()<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;declare_parameter&lt;bool&gt;(</highlight><highlight class="stringliteral">&quot;use_yaml&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;declare_parameter&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;yaml_prior_imu_x_std_dev&quot;</highlight><highlight class="normal">,<sp/><ref refid="constants_8hpp_1a679a0a7bca83d5a467b7375c350099b6" kindref="member">IMU_X_STD_DEV</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;declare_parameter&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;yaml_prior_imu_y_std_dev&quot;</highlight><highlight class="normal">,<sp/><ref refid="constants_8hpp_1ad70c10b51b08f27558f07b7c271d71cc" kindref="member">IMU_Y_STD_DEV</ref>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;declare_parameter&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;yaml_prior_imu_heading_std_dev&quot;</highlight><highlight class="normal">,<sp/><ref refid="constants_8hpp_1a1852f50e788c3ea01e25a3d3794f074a" kindref="member">IMU_HEADING_STD_DEV</ref>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;declare_parameter&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;yaml_bearing_std_dev&quot;</highlight><highlight class="normal">,<sp/><ref refid="constants_8hpp_1a2924395ddfcb0a0ee772330a11645707" kindref="member">BEARING_STD_DEV</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;declare_parameter&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;yaml_range_std_dev&quot;</highlight><highlight class="normal">,<sp/><ref refid="constants_8hpp_1ac8b3500acbbbbe79157d399cf5470083" kindref="member">RANGE_STD_DEV</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;declare_parameter&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;yaml_imu_x_std_dev&quot;</highlight><highlight class="normal">,<sp/><ref refid="constants_8hpp_1a679a0a7bca83d5a467b7375c350099b6" kindref="member">IMU_X_STD_DEV</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;declare_parameter&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;yaml_imu_y_std_dev&quot;</highlight><highlight class="normal">,<sp/><ref refid="constants_8hpp_1ad70c10b51b08f27558f07b7c271d71cc" kindref="member">IMU_Y_STD_DEV</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;declare_parameter&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;yaml_imu_heading_std_dev&quot;</highlight><highlight class="normal">,<sp/><ref refid="constants_8hpp_1a1852f50e788c3ea01e25a3d3794f074a" kindref="member">IMU_HEADING_STD_DEV</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;declare_parameter&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;yaml_gps_x_std_dev&quot;</highlight><highlight class="normal">,<sp/><ref refid="constants_8hpp_1a6bbb347325e8ba0244109a63faeaa935" kindref="member">GPS_X_STD_DEV</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;declare_parameter&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;yaml_gps_y_std_dev&quot;</highlight><highlight class="normal">,<sp/><ref refid="constants_8hpp_1a47940d04a5651b198450d2e69ba7af8d" kindref="member">GPS_Y_STD_DEV</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;declare_parameter&lt;int&gt;(</highlight><highlight class="stringliteral">&quot;yaml_look_radius&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="constants_8hpp_1ad2621efbf689d237023ac588d4adac1d" kindref="member">LOOK_RADIUS</ref>));<sp/></highlight><highlight class="comment">//<sp/>tell<sp/>us<sp/>how<sp/>many<sp/>cones<sp/>back<sp/>and<sp/>forth<sp/>to<sp/>update<sp/>in<sp/>slam_est</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;declare_parameter&lt;int&gt;(</highlight><highlight class="stringliteral">&quot;yaml_min_cones_update_all&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="constants_8hpp_1acd9de2a135b49ab524844ec7ea918525" kindref="member">MIN_CONES_UPDATE_ALL</ref>));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;declare_parameter&lt;int&gt;(</highlight><highlight class="stringliteral">&quot;yaml_window_update&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="constants_8hpp_1a7b7e67ce964f45fdb26f2d776bfbb1d6" kindref="member">WINDOW_UPDATE</ref>));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;declare_parameter&lt;int&gt;(</highlight><highlight class="stringliteral">&quot;yaml_update_start_n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="constants_8hpp_1a71a806ef167dbaf2ce22355d7a2c0d9f" kindref="member">UPDATE_START_N</ref>));<sp/></highlight><highlight class="comment">//<sp/>tell<sp/>us<sp/>how<sp/>many<sp/>cones<sp/>back<sp/>and<sp/>forth<sp/>to<sp/>update<sp/>in<sp/>slam_est</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;declare_parameter&lt;int&gt;(</highlight><highlight class="stringliteral">&quot;yaml_update_recent_n&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="constants_8hpp_1aadf34d16837e6f05ddfd90d6ad578fd2" kindref="member">UPDATE_RECENT_N</ref>));</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;declare_parameter&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;yaml_imu_offset&quot;</highlight><highlight class="normal">,<sp/><ref refid="constants_8hpp_1ac9d2880719f12dcb9d8981a27b13cb4d" kindref="member">IMU_OFFSET</ref>);<sp/></highlight><highlight class="comment">//meters;<sp/>offset<sp/>from<sp/>the<sp/>center<sp/>of<sp/>the<sp/>car</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;declare_parameter&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;yaml_lidar_offset&quot;</highlight><highlight class="normal">,<sp/><ref refid="constants_8hpp_1aadcb9d89b1ef0bbe27f2784462178ff9" kindref="member">LIDAR_OFFSET</ref>);<sp/></highlight><highlight class="comment">//meters;<sp/>offset<sp/>from<sp/>the<sp/>center<sp/>of<sp/>the<sp/>car</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;declare_parameter&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;yaml_max_cone_range&quot;</highlight><highlight class="normal">,<sp/><ref refid="constants_8hpp_1ada42544decc969afd04148fb0b684114" kindref="member">MAX_CONE_RANGE</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;declare_parameter&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;yaml_turning_max_cone_range&quot;</highlight><highlight class="normal">,<sp/><ref refid="constants_8hpp_1a89c80a289dc717aaa5f6a6c4dd171e42" kindref="member">TURNING_MAX_CONE_RANGE</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;declare_parameter&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;yaml_dist_from_start_loop_closure_th&quot;</highlight><highlight class="normal">,<sp/><ref refid="constants_8hpp_1a8434f7b2f400eb70a451eb2f8b2a74ce" kindref="member">DIST_FROM_START_LOOP_CLOSURE_TH</ref>);<sp/></highlight><highlight class="comment">//meters;<sp/>distance<sp/>from<sp/>the<sp/>start<sp/>for<sp/>loop<sp/>closure<sp/>detection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;declare_parameter&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;yaml_m_dist_th&quot;</highlight><highlight class="normal">,<sp/><ref refid="constants_8hpp_1a65c24ee9176f2806a19bd1d1f2ab041e" kindref="member">M_DIST_TH</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;declare_parameter&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;yaml_turning_m_dist_th&quot;</highlight><highlight class="normal">,<sp/><ref refid="constants_8hpp_1a352e28edf7c9a17454772a568c05b7ba" kindref="member">TURNING_M_DIST_TH</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;declare_parameter&lt;int&gt;(</highlight><highlight class="stringliteral">&quot;yaml_update_iterations_n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="constants_8hpp_1ac4763eb36d3d9b8e98581a24967ecac3" kindref="member">UPDATE_ITERATIONS_N</ref>));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;declare_parameter&lt;int&gt;(</highlight><highlight class="stringliteral">&quot;yaml_return_n_cones&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="constants_8hpp_1a5e3ba1fdbe5063e8131fd6a3a9cf5b8b" kindref="member">RETURN_N_CONES</ref>));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>cone_msg_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>velocity_msg_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>orientation_msg_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>position_msg_t&gt;<sp/></highlight></codeline>
<codeline lineno="81" refid="classnodes_1_1GenericSLAMNode_1add60599f53e6fcc111caae5fde661dff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;yaml_params::NoiseInputs&gt;<sp/><ref refid="classnodes_1_1GenericSLAMNode_1add60599f53e6fcc111caae5fde661dff" kindref="member">GenericSLAMNode&lt;cone_msg_t, velocity_msg_t, orientation_msg_t, position_msg_t&gt;::get_noise_inputs</ref>()<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;yaml_params::NoiseInputs&gt;<sp/>noise_inputs<sp/>=<sp/>std::nullopt;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Note:<sp/>get_parameter<sp/>returns<sp/>int64_t<sp/>for<sp/>ints.<sp/>However,<sp/>no<sp/>parameter<sp/>at<sp/>the<sp/>moment<sp/>needs<sp/>to<sp/>be<sp/>in64_t</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>so<sp/>we<sp/>static_cast<sp/>to<sp/>int32_t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_INFO(this-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;--------has_parameter<sp/>&apos;use_yaml&apos;:<sp/>%s<sp/>--------&quot;</highlight><highlight class="normal">,<sp/>(this-&gt;has_parameter(</highlight><highlight class="stringliteral">&quot;use_yaml&quot;</highlight><highlight class="normal">)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;has_parameter(</highlight><highlight class="stringliteral">&quot;use_yaml&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_INFO(this-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;--------use_yaml:<sp/>%s<sp/>--------&quot;</highlight><highlight class="normal">,<sp/>(this-&gt;get_parameter(</highlight><highlight class="stringliteral">&quot;use_yaml&quot;</highlight><highlight class="normal">).as_bool()<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;has_parameter(</highlight><highlight class="stringliteral">&quot;use_yaml&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>this-&gt;get_parameter(</highlight><highlight class="stringliteral">&quot;use_yaml&quot;</highlight><highlight class="normal">).as_bool())<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structyaml__params_1_1NoiseInputs" kindref="compound">yaml_params::NoiseInputs</ref><sp/>noise_inputs_literal;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise_inputs_literal.<ref refid="structyaml__params_1_1NoiseInputs_1a7d085a72f636ad802c6b771442db314b" kindref="member">yaml_prior_imu_x_std_dev</ref><sp/>=<sp/>this-&gt;get_parameter(</highlight><highlight class="stringliteral">&quot;yaml_prior_imu_x_std_dev&quot;</highlight><highlight class="normal">).as_double();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise_inputs_literal.<ref refid="structyaml__params_1_1NoiseInputs_1af3f5b87c5859df83b9b83feb10f9a888" kindref="member">yaml_prior_imu_y_std_dev</ref><sp/>=<sp/>this-&gt;get_parameter(</highlight><highlight class="stringliteral">&quot;yaml_prior_imu_y_std_dev&quot;</highlight><highlight class="normal">).as_double();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise_inputs_literal.<ref refid="structyaml__params_1_1NoiseInputs_1a273e03eb7a4a343501f936e280f95aa1" kindref="member">yaml_prior_imu_heading_std_dev</ref><sp/>=<sp/>this-&gt;get_parameter(</highlight><highlight class="stringliteral">&quot;yaml_prior_imu_heading_std_dev&quot;</highlight><highlight class="normal">).as_double();</highlight></codeline>
<codeline lineno="96" refid="classnodes_1_1GenericSLAMNode_1a2f490a869053d4f426550f5ce5512933" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classnodes_1_1GenericSLAMNode_1add60599f53e6fcc111caae5fde661dff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise_inputs_literal.<ref refid="structyaml__params_1_1NoiseInputs_1a6bf6b6cc6ee4454adad727522df04dcc" kindref="member">yaml_bearing_std_dev</ref><sp/>=<sp/>this-&gt;get_parameter(</highlight><highlight class="stringliteral">&quot;yaml_bearing_std_dev&quot;</highlight><highlight class="normal">).as_double();</highlight></codeline>
<codeline lineno="98" refid="classnodes_1_1GenericSLAMNode_1afbf813fbfc9c31773de427271ed6239e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise_inputs_literal.<ref refid="structyaml__params_1_1NoiseInputs_1a2a55e15ca783885e160bd69c18585aa1" kindref="member">yaml_range_std_dev</ref><sp/>=<sp/>this-&gt;get_parameter(</highlight><highlight class="stringliteral">&quot;yaml_range_std_dev&quot;</highlight><highlight class="normal">).as_double();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise_inputs_literal.<ref refid="structyaml__params_1_1NoiseInputs_1afc782fe902c0cc8cd1e31cd61bf14285" kindref="member">yaml_imu_x_std_dev</ref><sp/>=<sp/>this-&gt;get_parameter(</highlight><highlight class="stringliteral">&quot;yaml_imu_x_std_dev&quot;</highlight><highlight class="normal">).as_double();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise_inputs_literal.<ref refid="structyaml__params_1_1NoiseInputs_1a9866d0198e1cde6d56bb55544d1795cf" kindref="member">yaml_imu_y_std_dev</ref><sp/>=<sp/>this-&gt;get_parameter(</highlight><highlight class="stringliteral">&quot;yaml_imu_y_std_dev&quot;</highlight><highlight class="normal">).as_double();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise_inputs_literal.<ref refid="structyaml__params_1_1NoiseInputs_1aee2bde62bb358e8620fd6794c5025c09" kindref="member">yaml_imu_heading_std_dev</ref><sp/>=<sp/>this-&gt;get_parameter(</highlight><highlight class="stringliteral">&quot;yaml_imu_heading_std_dev&quot;</highlight><highlight class="normal">).as_double();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise_inputs_literal.<ref refid="structyaml__params_1_1NoiseInputs_1a086767c7f360269ed5669a01c83a8372" kindref="member">yaml_gps_x_std_dev</ref><sp/>=<sp/>this-&gt;get_parameter(</highlight><highlight class="stringliteral">&quot;yaml_gps_x_std_dev&quot;</highlight><highlight class="normal">).as_double();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise_inputs_literal.<ref refid="structyaml__params_1_1NoiseInputs_1a2794333e9b89f9587b979823d920b3aa" kindref="member">yaml_gps_y_std_dev</ref><sp/>=<sp/>this-&gt;get_parameter(</highlight><highlight class="stringliteral">&quot;yaml_gps_y_std_dev&quot;</highlight><highlight class="normal">).as_double();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise_inputs_literal.<ref refid="structyaml__params_1_1NoiseInputs_1a989236ec38677aeae7fe608ebf6031fa" kindref="member">yaml_look_radius</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(this-&gt;get_parameter(</highlight><highlight class="stringliteral">&quot;yaml_look_radius&quot;</highlight><highlight class="normal">).as_int());</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise_inputs_literal.<ref refid="structyaml__params_1_1NoiseInputs_1a3cf7dd22d2ef9f235cfaf0ed599c7741" kindref="member">yaml_min_cones_update_all</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(this-&gt;get_parameter(</highlight><highlight class="stringliteral">&quot;yaml_min_cones_update_all&quot;</highlight><highlight class="normal">).as_int());</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise_inputs_literal.<ref refid="structyaml__params_1_1NoiseInputs_1a242231efb0a57c097faaa12ec57f281f" kindref="member">yaml_window_update</ref><sp/>=<sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(this-&gt;get_parameter(</highlight><highlight class="stringliteral">&quot;yaml_window_update&quot;</highlight><highlight class="normal">).as_int());</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise_inputs_literal.<ref refid="structyaml__params_1_1NoiseInputs_1a32405e2b3595b8112b02c3572a81d2f0" kindref="member">yaml_update_start_n</ref><sp/>=<sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(this-&gt;get_parameter(</highlight><highlight class="stringliteral">&quot;yaml_update_start_n&quot;</highlight><highlight class="normal">).as_int());</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise_inputs_literal.<ref refid="structyaml__params_1_1NoiseInputs_1a0d038c540b0f56356322af75d59f5476" kindref="member">yaml_update_recent_n</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(this-&gt;get_parameter(</highlight><highlight class="stringliteral">&quot;yaml_update_recent_n&quot;</highlight><highlight class="normal">).as_int());</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise_inputs_literal.<ref refid="structyaml__params_1_1NoiseInputs_1a65087fb09f16571930c388ed3a21041e" kindref="member">yaml_imu_offset</ref><sp/>=<sp/>this-&gt;get_parameter(</highlight><highlight class="stringliteral">&quot;yaml_imu_offset&quot;</highlight><highlight class="normal">).as_double();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise_inputs_literal.<ref refid="structyaml__params_1_1NoiseInputs_1af6c56a5678051b6c65d2cf07b5aaa8d6" kindref="member">yaml_lidar_offset</ref><sp/>=<sp/>this-&gt;get_parameter(</highlight><highlight class="stringliteral">&quot;yaml_lidar_offset&quot;</highlight><highlight class="normal">).as_double();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise_inputs_literal.<ref refid="structyaml__params_1_1NoiseInputs_1a88212f21f77634c6ec91a2b65d357e6c" kindref="member">yaml_max_cone_range</ref><sp/>=<sp/>this-&gt;get_parameter(</highlight><highlight class="stringliteral">&quot;yaml_max_cone_range&quot;</highlight><highlight class="normal">).as_double();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise_inputs_literal.<ref refid="structyaml__params_1_1NoiseInputs_1a1a3bdc929fba1e0dd6411a32da291f73" kindref="member">yaml_turning_max_cone_range</ref><sp/>=<sp/>this-&gt;get_parameter(</highlight><highlight class="stringliteral">&quot;yaml_turning_max_cone_range&quot;</highlight><highlight class="normal">).as_double();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise_inputs_literal.<ref refid="structyaml__params_1_1NoiseInputs_1a3c9f96daac36dcbf9c3fef4f682acb0c" kindref="member">yaml_dist_from_start_loop_closure_th</ref><sp/>=<sp/>this-&gt;get_parameter(</highlight><highlight class="stringliteral">&quot;yaml_dist_from_start_loop_closure_th&quot;</highlight><highlight class="normal">).as_double();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise_inputs_literal.<ref refid="structyaml__params_1_1NoiseInputs_1afad760107fa08e72e17c13fc7a6550ef" kindref="member">yaml_m_dist_th</ref><sp/>=<sp/>this-&gt;get_parameter(</highlight><highlight class="stringliteral">&quot;yaml_m_dist_th&quot;</highlight><highlight class="normal">).as_double();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise_inputs_literal.<ref refid="structyaml__params_1_1NoiseInputs_1adfcd4f028a676aed5cc583395c108ffb" kindref="member">yaml_turning_m_dist_th</ref><sp/>=<sp/>this-&gt;get_parameter(</highlight><highlight class="stringliteral">&quot;yaml_turning_m_dist_th&quot;</highlight><highlight class="normal">).as_double();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise_inputs_literal.<ref refid="structyaml__params_1_1NoiseInputs_1a21de25c3ce35e12da4bfc38d78f320c0" kindref="member">yaml_update_iterations_n</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(this-&gt;get_parameter(</highlight><highlight class="stringliteral">&quot;yaml_update_iterations_n&quot;</highlight><highlight class="normal">).as_int());</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise_inputs_literal.<ref refid="structyaml__params_1_1NoiseInputs_1a3aae726d8ef2b9fc8dc63b39eb1f5fa2" kindref="member">yaml_return_n_cones</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(this-&gt;get_parameter(</highlight><highlight class="stringliteral">&quot;yaml_return_n_cones&quot;</highlight><highlight class="normal">).as_int());</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise_inputs<sp/>=<sp/>noise_inputs_literal;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_INFO(this-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;--------No<sp/>yaml<sp/>file<sp/>found<sp/>--------&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>noise_inputs;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/nodes/generic_slam_node.cpp"/>
  </compounddef>
</doxygen>
